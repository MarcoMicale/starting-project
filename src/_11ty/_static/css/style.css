:root {
  --gap: clamp(0.5rem, 1vw + 0.5rem, 1.5rem);
  --font: "Montserrat", ;
  --duration: 0.6s;
  --timing: ease-in-out;
  --color: #11182c;
  --bg: #f1f5f9;
  --bg2: #e2e8f0;
}

html {
  color-scheme: light;
  -webkit-hyphens: auto;
  hyphens: auto;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* remove default spacing */
/* force styling of type through styling, rather than elements */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* min body height */
body {
  background-color: var(--bg);
  min-height: 100dvh;
  color: var(--color);
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: clamp(1.15rem, 1vw + 0.5rem, 2.5rem);
  font-optical-sizing: auto;
  font-style: normal;
  font-weight: 400;
  line-height: 1.4;
  accent-color: var(--bg2);
  transition:
    color var(--duration) var(--timing),
    background-color var(--duration) var(--timing);
}

::selection {
  background-color: var(--bg);
  color: var(--color);
  text-decoration-color: var(--color);
  text-decoration: underline;
  text-decoration-style: solid;
  text-decoration-thickness: 0.08em;
  }

/* responsive images/videos */
img,
picture,
svg,
video {
  display: block;
  max-width: 100%;
  height: auto;
  font-style: italic;
  background-repeat: no-repeat;
  background-size: cover;
  shape-margin: 0.75rem;
}

h1,
h2,
h3 {
  text-wrap: balance;
  font-weight: 500;
  line-height: 1.25;
  letter-spacing: -0.025em;
  font-family: var(--font) ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

h1 {
  font-size: clamp(2.35rem, 4vw + 0.5rem, 4.85rem);
  padding-bottom: clamp(0.75rem, 1vw, 1.25rem);
  font-weight: 600;
}

h2 {
  font-size: clamp(1.85rem, 3vw + 0.5rem, 3.85rem);
  padding-bottom: clamp(0.5rem, 1vw, 1rem);
}

h3 {
  font-size: clamp(1.45rem, 2vw + 0.5rem, 2.85rem);
  padding-bottom: clamp(0.25rem, 1vw, 0.75rem);
}

p {
  text-align: justify;
  text-wrap: pretty;
}

select {
  background-color: var(--bg);
  border: none;
  transition: background-color var(--duration) var(--timing);
}

select:focus-visible {
  outline: solid 1px var(--bg2);
  outline-offset: 3px;
  transition: outline var(--duration) var(--timing);
}
.content {
  --max-content-width: 60ch;
  --breakout-difference:0.25;
  /*  Compute total allowed grid width to `--breakout-difference` larger than content area  */
  --breakout-grid-width: calc( var(--max-content-width) + (var(--max-content-width) * var(--breakout-difference)) );
  display: grid;
  grid-template-columns: [grid-start] 1fr [content-start] minmax(min(100%, var(--max-content-width)), 1fr) [content-end] 1fr [grid-end];
  width: min(100% - calc(2.75 * var(--gap)), var(--breakout-grid-width));
  row-gap: var(--gap);
  margin-inline: auto;
}

.content > *:not(.breakout) {
  grid-column: content;
}

.content > .breakout {
  grid-column: grid;
}

.center {
  display: grid;
  place-content: center;
}

footer {
  border-top: 1px solid var(--bg2);
  padding-top: var(--gap);
  -webkit-user-select: none;
  user-select: none;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  flex-wrap: wrap;
  row-gap: var(--gap);
  column-gap: calc(3 * var(--gap));
  transition: border var(--duration) var(--timing);
}


dark-mode-toggle.slider::part(toggleLabel) {
  --icon-size: calc(clamp(1.15rem, 1vw + 0.5rem, 2.5rem) / 2);
    display: inline-block;
    position: relative;
    height: calc(var(--icon-size, 1rem) * 2);
    width: calc(var(--icon-size, 1rem) * 3.8);
    background-color: var(--color);
    border-radius: var(--icon-size, 1rem);
    transition: var(--timing);
  }

  dark-mode-toggle.slider[mode='dark']::part(toggleLabel) {
    background-color: var(--color);
  }

  dark-mode-toggle.slider::part(toggleLabel)::before {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: calc(var(--icon-size, 1rem) * 0.25);
    left: calc(var(--icon-size, 1rem) * 0.25);
    height: calc(var(--icon-size, 1rem) * 1.5);
    width: calc(var(--icon-size, 1rem) * 1.5);
    border-radius: 100%;
    background-color: var(--bg);
    color: var(--color);
    transition:var(--timing);
    content: '';
    background-position: center;
    background-size: var(--icon-size, 1rem);
    background-image: none;
    box-sizing: border-box;
  }

  dark-mode-toggle.slider[mode='dark']::part(toggleLabel)::before {
    left: calc(100% - var(--icon-size, 1rem) * 1.75);
    border-color: var(--bg2);
    background-color: var(--color);
    color: var(--bg2);
    background-size: var(--icon-size, 1rem);
    background-image:none;
    filter: var(--dark-mode-toggle-icon-filter, invert(100%));
  }

  dark-mode-toggle.slider::part(toggleLabel)::after {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: calc(var(--icon-size, 1rem) * 0.25);
    left: calc(100% - var(--icon-size, 1rem) * 1.75);
    height: calc(var(--icon-size, 1rem) * 1.5);
    width: calc(var(--icon-size, 1rem) * 1.5);
    border-radius: 100%;
    color: var(--color);
    content: '';
    background-position: center;
    background-size: var(--icon-size, 1rem);
    background-image: none;
    background-repeat: no-repeat;
    box-sizing: border-box;
    opacity: 0.5;
  }

  dark-mode-toggle.slider[mode='dark']::part(toggleLabel)::after {
    left: calc(var(--icon-size, 1rem) * 0.25);
    filter: var(--dark-mode-toggle-icon-filter, invert(100%));
  }
