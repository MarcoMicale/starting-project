/*  */
:root {
    --color: #f8fafc;
    --bg: #111827;
}

@media (prefers-color-scheme:light) {
    :root {
        --color: #11182c;
        --bg: #f8fafc;
    }
}

html {
    color-scheme: dark light;
    hyphens: auto;
}

:root:has(#theme [value="light"]:checked) {
    color-scheme: light;
    --color: #11182c;
    --bg: #f8fafc;
}

:root:has(#theme [value="dark"]:checked) {
    color-scheme: dark;
    --color: #f8fafc;
    --bg: #111827;
    }

*,
*::before,
*::after {
    box-sizing: border-box;
}

/* remove default spacing */
/* force styling of type through styling, rather than elements */

* {
    margin: 0;
    padding: 0;
    font: inherit;
}


/* min body height */

body {
    background-color: var(--bg);
    min-height: 100dvh;
    color: var(--color);
    font-size: clamp(1rem, 1vw + 0.75rem, 2rem);
    font-weight: 400;
    line-height: 1.4;
    font-family: system-ui, sans-serif;
    accent-color: var(--bg);
}

/* responsive images/videos */
img,
picture,
svg,
video {
    display: block;
    max-width: 100%;
    height: auto;
    font-style: italic;
    background-repeat: no-repeat;
    background-size: cover;
    shape-margin: 0.75rem;
}

h1,
h2,
h3 {
    text-wrap: balance;
    font-weight: 600;
    line-height: 1.25;
}

h1 {
    font-size: clamp(2.35rem, 4vw + 0.75rem, 4.7rem);
    margin-bottom: 1.25rem;
}

h2 {
    font-size: clamp(1.85rem, 3vw + 0.75rem, 3.7rem);
    margin-bottom: 1rem;
}

h3 {
    font-size: clamp(1.35rem, 2vw + 0.75rem, 2.7rem);
    margin-bottom: 0.75rem;
}

p {
    font-size: clamp(1.1rem, 1vw + 0.75rem, 2.2rem);
    font-weight: 400;
    line-height: 1.3;
    text-wrap: pretty;
    display: block;
}

p + p {
    margin-top: 0.5rem;
}

select {
    background-color: var(--bg);
    padding: 0.1rem 0.25rem;
}

.content {
    --max-content-width: 60ch;
    --breakout-difference: 0.75;
    /*  Compute total allowed grid width to `--breakout-difference` larger than content area  */
    --breakout-grid-width: calc( var(--max-content-width) + (var(--max-content-width) * var(--breakout-difference)) );

    display: grid;
    grid-template-columns:
        [grid-start] 1fr
        [content-start] minmax(
            min(100%, var(--max-content-width)),1fr)
        [content-end] 1fr
        [grid-end];
    width: min(100% - 3rem, var(--breakout-grid-width));
    row-gap:1.5rem;
    margin-inline: auto;
}

.content > *:not(.breakout) {
    grid-column: content;
}

.content > .breakout {
    grid-column: grid;
    background-color: (var(--color));
    color: (var(--bg));
}

.center {
    display: grid;
    place-content: center;
}
